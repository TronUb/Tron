""" carbon plugin """

import os
import shutil
import urllib
import aiohttp

from pyrogram.types import Message
from main import app

colour_code = {
    "aqua": "#00FFFF",
    "red": "#FF0000",
    "blue": "#0000FF",
    "green": "#00FF00",
    "yellow": "#FFFF00",
    "gold": "#FFD700",
    "orange": "#FFA500",
    "purple": "#290544",
    "black": "#000000",
    "white": "#FFFFFF",
    "lime": "#00FF00",
    "silver": "#C0C0C0",
    "maroon": "#800000",
    "olive": "#808000",
    "teal": "#008080",
    "navy": "#000080",
    "chocolate": "#D2691E",
}


@app.on_cmd(
    commands=["carbon", "cb"],
    usage="Get a Carbon code image with text written on it.",
)
async def carbon_handler(_, m: Message):
    """ carbon handler for carbon plugin """
    cmd = m.command
    oldmsg = m

    if len(cmd) < 2:
        return await app.send_edit(
            f"Usage:\n\n`{app.Trigger[0]}carbon [colour] [text]`\n`{app.Trigger[0]}carbon [text]`\n\n**Note:** Default colour is aqua",
            delme=4
        )

    try:
        # remove the line below later
        return await app.send_edit(
            "This command isnt wokring anymore, wait for some updates.",
            text_type=["mono"],
            delme=4,
        )
        await app.send_edit("Creating code image . . .", text_type=["mono"])

        if cmd[1] in colour_code:
            text = oldmsg.text.split(None, 2)[2]
            colour = colour_code[cmd[1]]
        else:
            text = oldmsg.text.split(None, 1)[1]
            colour = colour_code["aqua"]

        await create_carbon(m, text=text, colour=colour)
    except Exception as e:
        await app.error(e)


@app.on_cmd(commands="carblist", usage="Get list of available background colors.")
async def carblist_handler(_, m: Message):
    """List handler for carbon plugin"""
    clist = [f"`{x}`" for x in list(colour_code.keys())]
    await app.send_edit("**SUPPORTED COLOURS:**\n\n" + "\n".join(clist))


async def create_carbon(m: Message, text, colour):
    """Creating a code image using an alternative Carbon API"""
    reply = m.reply_to_message
    encoded_text = urllib.parse.quote(text)
    api_url = f"https://carbon-api.vercel.app/api?code={encoded_text}&theme=dracula&background=true&padding=16"
    filename = "carbon_image.png"

    async with aiohttp.ClientSession() as session:
        async with session.get(api_url) as response:
            if response.status == 200:
                with open(filename, "wb") as f:
                    f.write(await response.read())

                reply_msg_id = reply.message_id if reply else None
                await app.send_document(
                    m.chat.id,
                    filename,
                    caption=f"**Generated by:** {app.UserMention}",
                    reply_to_message_id=reply_msg_id,
                )

                await m.delete()

                if os.path.exists(filename):
                    os.remove(filename)
            else:
                await app.send_edit(
                    "Image couldn't be retrieved.", delme=4, text_type=["mono"]
                )
